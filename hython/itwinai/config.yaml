# General configuration
surrogate_input: https://eurac-eo.s3.amazonaws.com/INTERTWIN/SURROGATE_INPUT/adg1km_eobs_preprocessed.zarr/
surrogate_model_output: ./
tmp_stats: ./

experiment: "drought use case demo"
run_name: "test"
epochs: 2
random_seed: 1010

training_pipeline:
  class_path: itwinai.pipeline.Pipeline
  init_args:
    steps:
      - class_path: hython.itwinai.data.RNNDatasetGetterAndSplitter
        init_args:
          surrogate_input: ${surrogate_input}
          dynamic_names: ["precip", "pet", "temp"]
          static_names: [ 'thetaS', 'RootingDepth', 'Swood','KsatVer', "Sl"]
          target_names: [ "vwc","actevap"]
          mask_names: ["mask_missing", "mask_lake"]
          train_temporal_range: ["2016-01-01", "2018-12-31"] 
          test_temporal_range: ["2019-01-01", "2020-12-31"] 
      - class_path: hython.itwinai.data.RNNProcessor
        init_args:
          dataset: LSTMDataset
      - class_path: hython.itwinai.trainer.RNNDistributedTrainer
        init_args:
          config:
            experiment: ${run_name}
            batch_size: 256
            lr: 0.001
            rnn_config:
              temporal_subsampling: True
              temporal_subset: [150, 150]
              seq_length: 60
              target_names:  [ "vwc","actevap"]
              dp_weights: ${surrogate_model_output}
              distributed: False
          model:
            class_path: hython.models.cudnnLSTM.CuDNNLSTM
            init_args:
              hidden_size: 24
              dynamic_input_size: 3
              static_input_size: 5
              output_size: 2
              num_layers: 1
              dropout: 0.0
          strategy: ddp
          epochs: ${epochs}
          random_seed: ${random_seed}
          logger:
            class_path: itwinai.loggers.LoggersCollection
            init_args:
              loggers:
                - class_path: itwinai.loggers.ConsoleLogger
                  init_args:
                    log_freq: 100
                - class_path: itwinai.loggers.MLFlowLogger
                  init_args:
                    experiment_name: ${experiment}
                    log_freq: batch
